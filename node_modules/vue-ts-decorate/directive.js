"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vue_1 = require("vue");
var tools_1 = require("./utils/tools");
var utilities_1 = require("./utils/utilities");
function Directive(options) {
    return function (target) {
        if (typeof options === 'string') {
            options = { name: options };
        }
        var local = options.local;
        delete options.local;
        var instance = new target();
        tools_1.parentMethods(target, instance);
        if (options.params && !options.paramWatchers)
            options.paramWatchers = {};
        for (var key in instance) {
            var isFunc = typeof instance[key] === 'function';
            if (isFunc) {
                if (~['bind', 'update', 'unbind'].indexOf(key)) {
                    options[key] = instance[key];
                }
                else if (~['inserted', 'componentUpdated'].indexOf(key) && utilities_1.vueVersion === 2) {
                    options[key] = instance[key];
                }
                else if (options.paramWatchers && ~options.params.indexOf(key)) {
                    options.paramWatchers[key] = instance[key];
                }
            }
        }
        if (!options.name) {
            console.warn("[vue-ts-decorate] Property 'name' must be set in directives");
        }
        var attr = utilities_1.camelToKebabCase(options.name);
        delete options.name;
        var updateFunc = Object.keys(options).length === 1 && options.update;
        if (local) {
            return _a = {}, _a[attr] = updateFunc || options, _a;
        }
        else {
            if (typeof updateFunc !== 'boolean') {
                vue_1.default.directive(attr, updateFunc);
            }
            else {
                vue_1.default.directive(attr, options);
            }
            return vue_1.default.directive(attr);
        }
        var _a;
    };
}
exports.default = Directive;
//# sourceMappingURL=directive.js.map