{"remainingRequest":"/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/views/Dashboard/PrivacyPolicy/PrivacyPolicy.vue?vue&type=template&id=6d250740&scoped=true&","dependencies":[{"path":"/home/cmurray/britevue-frontend/src/views/Dashboard/PrivacyPolicy/PrivacyPolicy.vue","mtime":1628691920057},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}