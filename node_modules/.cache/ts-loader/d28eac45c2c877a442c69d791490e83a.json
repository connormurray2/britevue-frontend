{"remainingRequest":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js!/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js??ref--14-2!/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/views/Dashboard/NewReview/NewReview.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cmurray/britevue-frontend/src/views/Dashboard/NewReview/NewReview.vue","mtime":1628691920057},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/views/Dashboard/NewReview/NewReview.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Inject, Vue} from \"vue-property-decorator\";\nimport Tip from \"@/components/Tip/Tip.vue\";\nimport Modal from \"@/components/Modal/Modal.vue\";\nimport {UserService} from \"@/services/UserService\";\nimport {ReviewsService} from \"@/services/ReviewsService\";\nimport {PlaceService} from \"@/services/PlaceService\";\nimport {IUser} from \"@/interfaces/IUser\";\nimport {FavoritesService} from \"@/services/FavoritesService\";\n\n\n@Component({\n  components: {\n    Tip,\n    Modal,\n  },\n  metaInfo:{\n    title: \"Britevue - Blockchain verified reviews where reviewers get paid\",\n    meta: [\n      { name:'title',content:'Britevue - Blockchain verified reviews where reviewers get paid'},\n      { name: 'description', content:  'Begin earning money for your reviews of businesses and places with Britevue. We will pay you for information about your hometown to get started!'},\n      { itemprop: 'name', content: \"Britevue\"},\n      { itemprop: 'description', content: \"Begin earning money for your reviews of businesses and places with Britevue. We will pay you for information about your hometown to get started!\"},\n      { itemprop: 'image', content:  require('@/assets/images/logo_black.svg')},\n      { property: 'og:type', content: \"website\"},\n      { property: 'og:url', content: \"https://britevue.com/\"},\n      { property: 'og:title', content: \"Britevue - Blockchain verified reviews where reviewers get paid\"},\n      { property: 'og:description', content: \"Begin earning money for your reviews of businesses and places with Britevue. We will pay you for information about your hometown to get started!\"},\n      { property: 'og:image', content:  require('@/assets/images/logo_black.svg')},\n      { property: 'og:site_name', content: 'britevue'},\n      { name: 'twitter:card', content: \"summary_large_image\"},\n      { name: 'twitter:url', content: \"https://britevue.com/\"},\n      { name: 'twitter:title', content: \"Britevue - Blockchain verified reviews where reviewers get paid\"},\n      { name: 'twitter:description', content: \"Begin earning money for your reviews of businesses and places with Britevue. We will pay you for information about your hometown to get started!\"},\n      { name: 'twitter:image', content: require('@/assets/images/logo_black.svg') },\n    ]\n  }\n\n})\n\nexport default class NewReview extends Vue {\n  place_id: string;\n  place_name: string;\n  flash: any;\n  submittingReview: boolean;\n  review_body: string;\n  review_paywall: number;\n  @Inject('reviewsService')\n  review_ser!: ReviewsService;\n  @Inject('userService')\n  user_ser!: UserService;\n\n  @Inject('placeService')\n  place_ser!: PlaceService;\n\n  @Inject('favoritesService')\n  favorites_ser!: FavoritesService;\n\n  showHandcashModal: boolean;\n  user: IUser | null = null;\n  requestErrorMessage: string;\n  latestTx: string;\n  options: any;\n  step: number;\n  files: File[] = [];\n  imageHashes: object[] = [];\n  uploadProgress: number;\n  showUploadProgressBar: boolean;\n  dragImage: number;\n\n  constructor() {\n    super();\n    if (typeof this.$route.params.place_id == 'undefined') {\n      this.$router.push({name: \"dashboard\"});\n    }\n    this.place_id = this.$route.params.place_id;\n    this.place_name = this.$route.params.place_name;\n\n    this.review_body = '';\n    this.review_paywall = 0.00\n    this.submittingReview = false;\n    this.showHandcashModal = false;\n    this.requestErrorMessage = '';\n    this.latestTx = '';\n    const user = this.user_ser.getCurrentUser();\n    if (user) {\n      this.user = user;\n    }\n    this.options = {\n      text: {\n        color: '#FFFFFF',\n        shadowEnable: true,\n        shadowColor: '#000000',\n        fontSize: 14,\n        fontFamily: 'Helvetica',\n        dynamicPosition: false,\n        hideText: false\n      },\n      progress: {\n        color: '#cc7a00',\n        backgroundColor: '#333333'\n      },\n      layout: {\n        height: 35,\n        width: 140,\n        verticalTextAlign: 61,\n        horizontalTextAlign: 43,\n        zeroOffset: 0,\n        strokeWidth: 30,\n        progressPadding: 0,\n        type: 'line'\n      }\n    }\n    this.uploadProgress = 0;\n    this.showUploadProgressBar = false;\n    this.step = 1;\n    this.dragImage = 0;\n  }\n\n  async mounted() {\n    if (typeof this.$route.params.review_id != 'undefined') {\n      //fetch review here\n      let fetched_review = await this.review_ser.getReview(this.$route.params.review_id);\n\n      if (fetched_review.status == 200) {\n        fetched_review = fetched_review.data;\n        this.review_body = fetched_review.reviewBody;\n        if (fetched_review.paywall != null) {\n          this.review_paywall = fetched_review.paywall.cost;\n        }\n        this.stars['quality'].rate = fetched_review.ratings.quality;\n        this.stars['experience'].rate = fetched_review.ratings.experience;\n        this.stars['value'].rate = fetched_review.ratings.value;\n        this.calculateRating();\n        this.latestTx = fetched_review.latestTx;\n\n      }\n    }\n  }\n\n  showHelpModal() {\n    (this.$refs['modal-help-text'] as any).show();\n  }\n\n  async onSubmit(e: any) {\n    e.preventDefault();\n    this.requestErrorMessage = '';\n    const el = document.getElementById('errorMessage')\n    if (el == null) {\n      throw new Error('failed to find errorMessage div')\n    }\n    if (this.review_body == \"\") {\n      el.innerHTML = 'Review Body is required';\n      return '';\n    }\n\n    if (this.stars['quality'].rate == null || this.stars['experience'].rate == null || this.stars['value'].rate == null) {\n      el.innerHTML = 'Please provide ratings before submitting review';\n      return '';\n    }\n    el.innerHTML = '';\n    if (this.user == null) {\n      throw new Error('cannot create review with no user')\n    }\n    this.submittingReview = true\n    await this.uploadImages();\n\n    if (typeof this.$route.params.review_id != 'undefined') {\n      const review = await this.review_ser.editReview(this.$route.params.review_id, this.latestTx, this.user, this.place_id, this.review_body, this.stars, this.imageHashes, this.review_paywall);\n\n      if (review.status == 200) {\n        this.flash('Your review has been successfully updated!', 'success', {timeout: 10000});\n        this.$router.push({\n          'name': 'dashboard',\n          params: {'review': 'true', 'place_name': this.place_name, 'place_id': this.place_id}\n        });\n      } else {\n        this.flash('Your review failed to be edited, please try again and if you continue to have problems please contact our support team', 'error', {timeout: 10000});\n      }\n    } else {\n      const review = await this.review_ser.createReview(this.user, this.place_id, this.review_body, this.stars, this.imageHashes, this.review_paywall);\n      if (review.status == 200) {\n        this.flash('Your review has been successfully submitted!', 'success', {timeout: 10000});\n        this.$router.push({\n          'name': 'dashboard',\n          params: {'review': 'true', 'place_name': this.place_name, 'place_id': this.place_id}\n        });\n      } else if (review.status == 555) {\n        this.showHandcashModal = true\n      } else {\n        this.flash('Your review failed to be submitted, please try again and if you continue to have problems please contact our support team', 'error', {timeout: 10000});\n      }\n    }\n    this.submittingReview = false\n  }\n\n  async uploadImages() {\n    this.step = 1;\n    this.showUploadProgressBar = true;\n    let i = 0;\n    let status = false;\n    const progress = 100 / (this.files.length);\n    for (i = 0; i < this.files.length; i++) {\n\n      //upload images\n      const uploadPlaceImage = await this.place_ser.uploadPlaceImage(this.files[i], this.place_id);\n      if (uploadPlaceImage.status != 200) {\n        this.flash(uploadPlaceImage.data.message, 'error', {timeout: 5000});\n        continue;\n      }\n      if (uploadPlaceImage.status == 200) {\n        status = true;\n        this.imageHashes.push({'hash': uploadPlaceImage.data.hash, 'id': uploadPlaceImage.data.id});\n        this.flash('Image has been uploaded', 'success', {timeout: 5000});\n      }\n      this.uploadProgress += parseInt(progress.toFixed(2));\n    }\n    this.showUploadProgressBar = false;\n\n  }\n\n  stars: any = {\n    quality: {\n      title: \"Quality\",\n      stars: 5,\n      active: null,\n      rate: null,\n    },\n    experience: {\n      title: \"Experience\",\n      stars: 5,\n      active: null,\n      rate: null,\n    },\n    value: {\n      title: \"Value\",\n      stars: 5,\n      active: null,\n      rate: null,\n    }\n  };\n  rating_description = [\n    \"Bad\",\n    \"Okay\",\n    \"Good\",\n    \"Very good\",\n    \"Excellent\",\n  ];\n  rating_result = \"0\";\n\n  setActive(type: string, stars: number) {\n    this.stars[type].active = stars;\n  }\n\n  clearStars(type: string) {\n    this.stars[type].active = null;\n  }\n\n  setRate(type: string, stars: number) {\n    this.stars[type].rate = stars;\n    this.calculateRating();\n  }\n\n  paywallChanged(e: any) {\n    if (e.target.value === '') {\n      this.review_paywall = 0\n    }\n  }\n\n  calculateRating() {\n    let total_rated = 0;\n    for (const type in this.stars) {\n      total_rated += this.stars[type].rate;\n    }\n    this.rating_result = (total_rated / 3).toFixed(1);\n  }\n\n  getRoutePath(name: string, parameters: any) {\n    return this.$router.push({name: name, params: parameters});\n  }\n\n   handleFileDrop(e: any) {\n     this.dragImage = 1;\n    const droppedFiles = e.dataTransfer.files;\n    if (!droppedFiles) return;\n    // this tip, convert FileList to array\n    ([...droppedFiles]).forEach((f: any) => {\n      this.files.push(f);\n    });\n    this.step = 2;\n  }\n\n  handleFileInput(e: any) {\n\n    if (this.dragImage == 0) {\n      const input_files = e.target.files;\n      if (!input_files) return;\n      // this tip, convert FileList to array\n      ([...input_files]).forEach((f: File) => {\n        this.files.push(f);\n      });\n      this.step = 2;\n    }\n\n  }\n\n  removeFile(fileKey: any) {\n    this.files.splice(fileKey, 1);\n    if (this.files.length == 0) {\n      this.step = 1;\n    }\n  }\n\n  fileDragIn() {\n    console.log('');\n  }\n\n  fileDragOut() {\n    console.log('');\n  }\n\n  showImageUploader() {\n    this.step = 1;\n  }\n\n  hideImageUploader() {\n    this.step = 1;\n    this.files = [];\n  }\n\n  createUrl(imageFile: File) {\n    return window.URL.createObjectURL(imageFile);\n  }\n\n  async addFavoritePlace(place_id: any) {\n    if (this.checkUserWallet()) {\n      const add_favorite_place = await this.favorites_ser.addFavorite(this.user!.id, 'location', place_id);\n      if (add_favorite_place.status == 200) {\n        this.flash('Place has been added to your favorites', 'success', {timeout: 5000});\n      }\n      if (add_favorite_place.status == 409) {\n        this.flash('You have already added this place as a favorite', 'error', {timeout: 5000});\n      }\n    }\n  }\n\n  checkUserWallet() {\n    if (this.user) {\n      if (this.user.wallet) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  changeDragValue(){\n    this.dragImage=0;\n  }\n}\n"],"sourceRoot":""}]}