{"remainingRequest":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js!/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js??ref--14-2!/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/components/RecentReviews/RecentReviews.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cmurray/britevue-frontend/src/components/RecentReviews/RecentReviews.vue","mtime":1628691920056},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/components/RecentReviews/RecentReviews.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Inject, Prop} from 'vue-property-decorator';\nimport {IReview} from \"@/interfaces/IReview.ts\";\nimport {UserService} from \"@/services/UserService\";\nimport {ReviewsService} from \"@/services/ReviewsService\";\nimport {IUser} from \"@/interfaces/IUser\";\nimport Login from \"@/components/Login/Login.vue\";\nimport Signup from \"@/components/Signup/Signup.vue\";\nimport Tip from \"@/components/Tip/Tip.vue\";\nimport Modal from \"@/components/Modal/Modal.vue\";\n@Component({\n  components: {\n    Tip,\n    Modal\n  }\n})\nexport default class RecentReviews extends Vue{\n\n  @Inject('userService')\n  user_service!: UserService;\n\n  @Inject('reviewsService')\n  review_ser!: ReviewsService;\n  showImages: number;\n  activities:  IReview[] ;\n  tipStatus: boolean;\n  loadingReviews: boolean;\n  showHandcashModal: boolean;\n\n  @Prop() user!:  IUser | null;\n\n  constructor() {\n    super();\n    this.showImages=6;\n    this.loadingReviews=false;\n    this.activities = [];\n    this.tipStatus=false;\n    this.showHandcashModal=false;\n  }\n  async mounted(){\n    await  this.loadActivities();\n  }\n  async loadActivities(){\n    this.loadingReviews=true\n\n    const reviews = await this.review_ser.getRecentActivities();\n\n    if (reviews.length > 0) {\n      this.activities = reviews;\n    }\n    this.loadingReviews=false\n  }\n\n\n  imageUrlAlt(event: any) {\n    event.target.src = require('@/assets/images/test/restaurant.png');\n  }\n\n  showMoreImages() {\n    this.showImages +=6;\n  }\n  getRoutePath(name: string, parameters: any) {\n    return this.$router.push({name: name, params: parameters});\n  }\n\n  async onSubmit(value: any,userId: any,reviewId: any ){\n    const sendTip = await this.review_ser.sendTip(value,userId,reviewId);\n    if (sendTip.status == 200) {\n      this.$emit('success', 'Your Tip has been sent successfully');\n      this.tipStatus=true;\n    }else if(sendTip.status==555){\n      this.showHandcashModal=true;\n      this.tipStatus=false;\n    }\n    else{\n      this.$emit('error', sendTip.data.message);\n      this.tipStatus=false;\n    }\n  }\n\n  async upvote(review_id: string, e: any) {\n    e.preventDefault();\n\n    if(this.checkUserWallet()){\n      const spinner=document.getElementById('upvote-spinner-' + review_id) as HTMLElement;\n      const upvoteElement=document.getElementById('upvote-' + review_id) as HTMLElement;\n      const upvoteIcon=document.getElementById('upvote-icon-' + review_id) as HTMLElement;\n      spinner.classList.remove('d-none');\n      upvoteElement.classList.add('d-none');\n      upvoteIcon.classList.add('d-none');\n      const res = await this.review_ser.upvoteReview(this.user!.id, review_id);\n      spinner.classList.add('d-none');\n      upvoteElement.classList.remove('d-none');\n      upvoteIcon.classList.remove('d-none');\n      if (res.status == 200) {\n        const upvoteResult = res.data\n        if (typeof upvoteResult.txid != 'undefined') {\n          const vote = upvoteElement!.textContent;\n          upvoteElement!.innerHTML = (parseInt(vote!) + 1).toString();\n          this.$emit('success', 'Successfully upvoted review');\n        }\n      } else if (res.status == 555) {\n        this.showHandcashModal=true;\n      } else {\n        const msg = res.data.message\n        if (typeof msg != 'undefined') {\n          this.$emit('error', msg);\n        }\n      }\n    }\n  }\n  async downvote(review_id: string, e: any) {\n    e.preventDefault();\n    if(this.checkUserWallet()){\n      const spinner=document.getElementById('downvote-spinner-' + review_id) as HTMLElement;\n      const downvoteElement=document.getElementById('downvote-' + review_id) as HTMLElement;\n      const downvoteIcon=document.getElementById('downvote-icon-' + review_id) as HTMLElement;\n      spinner.classList.remove('d-none');\n      downvoteElement.classList.add('d-none');\n      downvoteIcon.classList.add('d-none');\n      const res = await this.review_ser.downReview(this.user!.id, review_id);\n      spinner.classList.add('d-none');\n      downvoteElement.classList.remove('d-none');\n      downvoteIcon.classList.remove('d-none');\n      if (res.status == 200) {\n        const downvoteResult = res.data\n        if (typeof downvoteResult.txid != 'undefined') {\n          const vote = downvoteElement!.textContent;\n          downvoteElement!.innerHTML = (parseInt(vote!) + 1).toString();\n          this.$emit('success', 'Successfully downvoted review');\n        }\n      } else {\n        const msg = res.data.message\n        if (typeof msg != 'undefined') {\n          this.$emit('error', msg);\n        }\n      }\n    }\n  }\n  checkUserWallet() {\n    if (this.user) {\n      if (this.user.wallet) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n}\n"],"sourceRoot":""}]}