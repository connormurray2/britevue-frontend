{"remainingRequest":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js!/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js??ref--14-2!/home/cmurray/britevue-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/cmurray/britevue-frontend/src/services/FavoritesService.ts","dependencies":[{"path":"/home/cmurray/britevue-frontend/src/services/FavoritesService.ts","mtime":1616199817994},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cmurray/britevue-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/cmurray/britevue-frontend/src/services/FavoritesService.ts"],"names":[],"mappings":"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","sourcesContent":["import {Api} from \"@/services/Api\";\nimport {IFavorite} from \"@/interfaces/IFavorite\";\nimport router from \"@/router\";\nimport Axios from \"axios\";\n\nexport class FavoritesService extends Api {\n    public async reviewers(id: string) {\n        const token = JSON.parse(localStorage.token)\n        const url = this.base_url + `/api/favorites?filter=reviewers&id=${id}`;\n        try {\n            const res = await Axios.get(url, {\n                headers: {  'Content-type': 'application/json; charset=UTF-8',\"Authorization\": \"Bearer \"+token.token}\n                //withCredentials: true\n            });\n            return res;\n        } catch (e) {\n            if (e.response.status === 401) {\n                this.logout();\n                router.push({name: 'home'});\n            } else if (e.response.status === 403) {\n                this.logout();\n                router.push({name: 'home'});\n            } else {\n                //...\n            }\n            return JSON.parse('');\n        }\n\n    }\n\n    public async places(id: string) {\n        const token = JSON.parse(localStorage.token)\n        const url = this.base_url + `/api/favorites?filter=locations&id=${id}`;\n        try {\n\n            const res = await Axios.get(url, {\n                headers: {  'Content-type': 'application/json; charset=UTF-8',\"Authorization\": \"Bearer \"+token.token}\n                //withCredentials: true\n            });\n            return res;\n        } catch (e) {\n            if (e.response.status === 401) {\n                this.logout();\n                router.push({name: 'home'});\n            } else if (e.response.status === 403) {\n                this.logout();\n                router.push({name: 'home'});\n            } else {\n                //...\n            }\n            return JSON.parse('');\n        }\n\n    }\n\n    public async addFavorite(user_id: string, type: string, favorite_id: string) {\n        const token = JSON.parse(localStorage.token)\n        const url = this.base_url + `/api/favorites`;\n        try {\n            const res = await Axios.post(url,\n                JSON.stringify(\n                    {\n                        \"id\": user_id,\n                        \"type\": type,\n                        \"favorite\": favorite_id\n                    }\n                ),\n                {\n                    headers: {\n                        'Content-type': 'application/json; charset=UTF-8','Authorization': 'Bearer ' + token.token,\n                    }\n                }\n            );\n            return res;\n        } catch (e) {\n            if (e.response.status === 401) {\n                this.logout();\n                router.push({name: 'home'});\n            } else if (e.response.status === 403) {\n                this.logout();\n                router.push({name: 'home'});\n            }\n            else {\n                return e.response;\n            }\n            return JSON.parse('');\n        }\n\n    }\n\n    public async logout() {\n        localStorage.removeItem('user');\n    }\n}\n"],"sourceRoot":""}]}