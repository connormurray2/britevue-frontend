{"remainingRequest":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js!/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js??ref--14-2!/home/cmurray/britevue-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/cmurray/britevue-frontend/src/services/NotficationsService.ts","dependencies":[{"path":"/home/cmurray/britevue-frontend/src/services/NotficationsService.ts","mtime":1628691920056},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvY211cnJheS9icml0ZXZ1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvY211cnJheS9icml0ZXZ1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL2NtdXJyYXkvYnJpdGV2dWUtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9jbXVycmF5L2JyaXRldnVlLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL2hvbWUvY211cnJheS9icml0ZXZ1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBBcGkgfSBmcm9tICJAL3NlcnZpY2VzL0FwaSI7CmltcG9ydCBBeGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwpleHBvcnQgdmFyIE5vdGlmaWNhdGlvbnNTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQXBpKSB7CiAgX2luaGVyaXRzKE5vdGlmaWNhdGlvbnNTZXJ2aWNlLCBfQXBpKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihOb3RpZmljYXRpb25zU2VydmljZSk7CgogIGZ1bmN0aW9uIE5vdGlmaWNhdGlvbnNTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vdGlmaWNhdGlvbnNTZXJ2aWNlKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTm90aWZpY2F0aW9uc1NlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRVc2VyTm90aWZpY2F0aW9ucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldFVzZXJOb3RpZmljYXRpb25zID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0b2tlbiwgdXJsLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCEobG9jYWxTdG9yYWdlLnRva2VuID09IG51bGwpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aHJvdyAnbm8gdG9rZW4gZm91bmQnOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICB0b2tlbiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLnRva2VuKTsKICAgICAgICAgICAgICAgIHVybCA9IHRoaXMuYmFzZV91cmwgKyAiL2FwaS9ub3RpZmljYXRpb25zIjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gQXhpb3MuZ2V0KHVybCwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JywKICAgICAgICAgICAgICAgICAgICAiQXV0aG9yaXphdGlvbiI6ICJCZWFyZXIgIiArIHRva2VuLnRva2VuCiAgICAgICAgICAgICAgICAgIH0gLy93aXRoQ3JlZGVudGlhbHM6IHRydWUKCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDQpOwoKICAgICAgICAgICAgICAgIGlmICghKF9jb250ZXh0LnQwLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubG9nb3V0KCk7CiAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICdob21lJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICAgIGlmICghKF9jb250ZXh0LnQwLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAzKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubG9nb3V0KCk7CiAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICdob21lJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnQwLnJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbNCwgMTFdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldFVzZXJOb3RpZmljYXRpb25zKCkgewogICAgICAgIHJldHVybiBfZ2V0VXNlck5vdGlmaWNhdGlvbnMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFVzZXJOb3RpZmljYXRpb25zOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiY2xlYXJVc2VyTm90aWZpY2F0aW9ucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2NsZWFyVXNlck5vdGlmaWNhdGlvbnMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciB0b2tlbiwgdXJsLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHRva2VuID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UudG9rZW4pOwogICAgICAgICAgICAgICAgdXJsID0gdGhpcy5iYXNlX3VybCArICIvYXBpL25vdGlmaWNhdGlvbnMvY2xlYXIiOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zLnBvc3QodXJsLCAnJywgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JywKICAgICAgICAgICAgICAgICAgICAiQXV0aG9yaXphdGlvbiI6ICJCZWFyZXIgIiArIHRva2VuLnRva2VuCiAgICAgICAgICAgICAgICAgIH0gLy93aXRoQ3JlZGVudGlhbHM6IHRydWUKCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDIpOwoKICAgICAgICAgICAgICAgIGlmICghKF9jb250ZXh0Mi50MC5yZXNwb25zZS5zdGF0dXMgPT09IDUwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi50MC5yZXNwb25zZSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICBpZiAoIShfY29udGV4dDIudDAucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubG9nb3V0KCk7CiAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICdob21lJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICBpZiAoIShfY29udGV4dDIudDAucmVzcG9uc2Uuc3RhdHVzID09PSA0MDMpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubG9nb3V0KCk7CiAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICdob21lJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMjU6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnQwLnJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcywgW1syLCA5XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBjbGVhclVzZXJOb3RpZmljYXRpb25zKCkgewogICAgICAgIHJldHVybiBfY2xlYXJVc2VyTm90aWZpY2F0aW9ucy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gY2xlYXJVc2VyTm90aWZpY2F0aW9uczsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImxvZ291dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE5vdGlmaWNhdGlvbnNTZXJ2aWNlOwp9KEFwaSk7"},{"version":3,"sources":["/home/cmurray/britevue-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/cmurray/britevue-frontend/src/services/NotficationsService.ts"],"names":[],"mappings":";;;;;;AAAA,SAAQ,GAAR,QAAkB,gBAAlB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAP,MAAmB,UAAnB;AAGA,WAAa,oBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGU,YAAY,CAAC,KAAb,IAAsB,IAHhC;AAAA;AAAA;AAAA;;AAAA,sBAIc,gBAJd;;AAAA;AAMc,gBAAA,KANd,GAMsB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,KAAxB,CANtB;AAOc,gBAAA,GAPd,GAOoB,KAAK,QAAL,uBAPpB;AAAA;AAAA;AAAA,uBAS8B,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe;AAC7B,kBAAA,OAAO,EAAE;AAAG,oCAAgB,iCAAnB;AAAqD,qCAAiB,YAAU,KAAK,CAAC;AAAtF,mBADoB,CAE7B;;AAF6B,iBAAf,CAT9B;;AAAA;AASkB,gBAAA,GATlB;AAAA,iDAamB,GAbnB;;AAAA;AAAA;AAAA;;AAAA,sBAegB,YAAE,QAAF,CAAW,MAAX,KAAsB,GAftC;AAAA;AAAA;AAAA;;AAgBgB,qBAAK,MAAL;AACA,gBAAA,MAAM,CAAC,IAAP,CAAY;AAAC,kBAAA,IAAI,EAAE;AAAP,iBAAZ;AAjBhB;AAAA;;AAAA;AAAA,sBAkBuB,YAAE,QAAF,CAAW,MAAX,KAAsB,GAlB7C;AAAA;AAAA;AAAA;;AAmBgB,qBAAK,MAAL;AACA,gBAAA,MAAM,CAAC,IAAP,CAAY;AAAC,kBAAA,IAAI,EAAE;AAAP,iBAAZ;AApBhB;AAAA;;AAAA;AAAA,iDAsBqB,YAAE,QAtBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4Bc,gBAAA,KA5Bd,GA4BsB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,KAAxB,CA5BtB;AA6Bc,gBAAA,GA7Bd,GA6BoB,KAAK,QAAL,6BA7BpB;AAAA;AAAA;AAAA,uBA+B8B,KAAK,CAAC,IAAN,CAAW,GAAX,EAAe,EAAf,EAAkB;AAChC,kBAAA,OAAO,EAAE;AAAG,oCAAgB,iCAAnB;AAAqD,qCAAiB,YAAU,KAAK,CAAC;AAAtF,mBADuB,CAEhC;;AAFgC,iBAAlB,CA/B9B;;AAAA;AA+BkB,gBAAA,GA/BlB;AAAA,kDAmCmB,GAnCnB;;AAAA;AAAA;AAAA;;AAAA,sBAqCgB,aAAE,QAAF,CAAW,MAAX,KAAsB,GArCtC;AAAA;AAAA;AAAA;;AAAA,kDAsCuB,aAAE,QAtCzB;;AAAA;AAAA,sBAwCqB,aAAE,QAAF,CAAW,MAAX,KAAsB,GAxC3C;AAAA;AAAA;AAAA;;AAyCgB,qBAAK,MAAL;AACA,gBAAA,MAAM,CAAC,IAAP,CAAY;AAAC,kBAAA,IAAI,EAAE;AAAP,iBAAZ;AA1ChB;AAAA;;AAAA;AAAA,sBA2CuB,aAAE,QAAF,CAAW,MAAX,KAAsB,GA3C7C;AAAA;AAAA;AAAA;;AA4CgB,qBAAK,MAAL;AACA,gBAAA,MAAM,CAAC,IAAP,CAAY;AAAC,kBAAA,IAAI,EAAE;AAAP,iBAAZ;AA7ChB;AAAA;;AAAA;AAAA,kDA+CqB,aAAE,QA/CvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAmDU;AACF,MAAA,YAAY,CAAC,UAAb,CAAwB,MAAxB;AACH;AArDL;;AAAA;AAAA,EAA0C,GAA1C","sourcesContent":["import {Api} from \"@/services/Api\";\nimport Axios from \"axios\";\nimport router from \"@/router\";\n\n\nexport class NotificationsService extends Api {\n\n    public async getUserNotifications(){\n      if (localStorage.token == null) {\n        throw 'no token found'\n      }\n        const token = JSON.parse(localStorage.token)\n        const url = this.base_url + `/api/notifications`;\n        try {\n            const res = await Axios.get(url, {\n                headers: {  'Content-type': 'application/json; charset=UTF-8',\"Authorization\": \"Bearer \"+token.token}\n                //withCredentials: true\n            });\n            return res;\n        } catch (e) {\n            if (e.response.status === 401) {\n                this.logout();\n                router.push({name: 'home'});\n            } else if (e.response.status === 403) {\n                this.logout();\n                router.push({name: 'home'});\n            } else {\n              return e.response\n                //...\n            }\n        }\n    }\n    public async clearUserNotifications(){\n        const token = JSON.parse(localStorage.token)\n        const url = this.base_url + `/api/notifications/clear`;\n        try {\n            const res = await Axios.post(url,'',{\n                headers: {  'Content-type': 'application/json; charset=UTF-8',\"Authorization\": \"Bearer \"+token.token}\n                //withCredentials: true\n            });\n            return res;\n        } catch (e) {\n            if (e.response.status === 500) {\n                return e.response;\n            }\n            else if (e.response.status === 401) {\n                this.logout();\n                router.push({name: 'home'});\n            } else if (e.response.status === 403) {\n                this.logout();\n                router.push({name: 'home'});\n            } else {\n              return e.response\n            }\n        }\n    }\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n}\n"],"sourceRoot":""}]}