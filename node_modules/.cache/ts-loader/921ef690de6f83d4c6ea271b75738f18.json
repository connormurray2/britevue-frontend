{"remainingRequest":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js!/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js??ref--14-2!/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/components/Login/Login.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cmurray/britevue-frontend/src/components/Login/Login.vue","mtime":1628691920056},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvY211cnJheS9icml0ZXZ1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvY211cnJheS9icml0ZXZ1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL2NtdXJyYXkvYnJpdGV2dWUtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9jbXVycmF5L2JyaXRldnVlLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL2hvbWUvY211cnJheS9icml0ZXZ1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgeyBWdWUsIENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCAiLi9Mb2dpbi5zY3NzIjsKdmFyIEhhbmRjYXNoQXBwSUQgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0hDX0FQUF9JRDsKCnZhciBMb2dpbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhMb2dpbiwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTG9naW4pOwoKICBmdW5jdGlvbiBMb2dpbigpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9naW4pOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcyk7CiAgICBfdGhpcy51c2VybmFtZSA9ICIiOwogICAgX3RoaXMucGFzc3dvcmQgPSAiIjsKICAgIF90aGlzLm9wZW4gPSBmYWxzZTsKICAgIF90aGlzLmVycm9yX21lc3NhZ2UgPSAiIjsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhMb2dpbiwgW3sKICAgIGtleTogInNob3dNb2RhbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvd01vZGFsKCkgewogICAgICB0aGlzLm9wZW4gPSB0cnVlOwogICAgICB0aGlzLiRidk1vZGFsLnNob3coImxvZ2luLW1vZGFsIik7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9naW5IYW5kY2FzaCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2xvZ2luSGFuZGNhc2ggPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGV4cGlyZUluOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGV4cGlyZUluID0gbmV3IERhdGUobmV3IERhdGUoKS5nZXRUaW1lKCkgKyA1ICogNjAgKiAxMDAwKTsKICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCdsb2dpblVzZXInLCB0cnVlLCBleHBpcmVJbik7CiAgICAgICAgICAgICAgICB0aGlzLiRjb29raWVzLnNldCgnbG9naW5QYXRoJywgdGhpcy4kcm91dGUucGF0aCwgZXhwaXJlSW4pOwogICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnaHR0cHM6Ly9hcHAuaGFuZGNhc2guaW8vIy9hdXRob3JpemVBcHA/YXBwSWQ9JyArIEhhbmRjYXNoQXBwSUQ7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBsb2dpbkhhbmRjYXNoKCkgewogICAgICAgIHJldHVybiBfbG9naW5IYW5kY2FzaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbG9naW5IYW5kY2FzaDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfbG9naW4gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBlcnIsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdGhpcy5lcnJvcl9tZXNzYWdlID0gIiI7CiAgICAgICAgICAgICAgICBlcnIgPSBudWxsOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudXNlcl9zZXIubG9naW4odGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGVyciA9IGU7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEoZXJyIHx8IHJlcy5zdGF0dXMgPT09IDQwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yX21lc3NhZ2UgPSAiUGxlYXNlIGNoZWNrIHlvdXIgY3JlZGVudGlhbHMuIjsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgdGhpcy51c2VyX3Nlci5jdXJyZW50VXNlciA9IHJlczsKICAgICAgICAgICAgICAgIHRoaXMuJGJ2TW9kYWwuaGlkZSgibG9naW4tbW9kYWwiKTsKICAgICAgICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnb25Mb2dpbicsIHRydWUpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbG9naW4oKSB7CiAgICAgICAgcmV0dXJuIF9sb2dpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbG9naW47CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJpc09wZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzT3BlbigpIHsKICAgICAgcmV0dXJuIHRoaXMub3BlbjsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzaWdudXAiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNpZ251cCgpIHsKICAgICAgdGhpcy5vcGVuID0gZmFsc2U7CiAgICAgIHRoaXMuJGJ2TW9kYWwuaGlkZSgibG9naW4tbW9kYWwiKTsKICAgICAgdGhpcy4kZW1pdCgnb3BlblNpZ251cCcsIHRydWUpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIExvZ2luOwp9KFZ1ZSk7CgpfX2RlY29yYXRlKFtJbmplY3QoJ3VzZXJTZXJ2aWNlJyldLCBMb2dpbi5wcm90b3R5cGUsICJ1c2VyX3NlciIsIHZvaWQgMCk7CgpMb2dpbiA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudF0sIExvZ2luKTsKZXhwb3J0IGRlZmF1bHQgTG9naW47"},{"version":3,"sources":["/home/cmurray/britevue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cmurray/britevue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cmurray/britevue-frontend/src/components/Login/Login.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;AAsDA,SAAQ,GAAR,EAAa,SAAb,EAAwB,MAAxB,QAAqC,wBAArC;AACA,OAAO,cAAP;AAGA,IAAM,aAAa,GAAG,OAAO,CAAC,GAAR,CAAY,iBAAlC;;AAGA,IAAqB,KAArB;AAAA;;AAAA;;AAOE,mBAAA;AAAA;;AAAA;;AACE;AACA,UAAK,QAAL,GAAgB,EAAhB;AACA,UAAK,QAAL,GAAgB,EAAhB;AACA,UAAK,IAAL,GAAY,KAAZ;AACA,UAAK,aAAL,GAAqB,EAArB;AALF;AAMC;;AAbH;AAAA;AAAA,gCAcW;AACP,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,QAAL,CAAc,IAAd,CAAmB,aAAnB;AACD;AAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBU,gBAAA,QAnBV,GAmBqB,IAAI,IAAJ,CAAS,IAAI,IAAJ,GAAW,OAAX,KAAuB,IAAI,EAAJ,GAAS,IAAzC,CAnBrB;AAoBI,qBAAK,QAAL,CAAc,GAAd,CAAkB,WAAlB,EAA+B,IAA/B,EAAqC,QAArC;AACA,qBAAK,QAAL,CAAc,GAAd,CAAkB,WAAlB,EAA+B,KAAK,MAAL,CAAY,IAA3C,EAAiD,QAAjD;AACA,gBAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,kDAAkD,aAAzE;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBI,qBAAK,aAAL,GAAqB,EAArB;AACI,gBAAA,GA1BR,GA0Bc,IA1Bd;AAAA;AAAA,uBA2BsB,KAAK,QAAL,CAAc,KAAd,CAAoB,KAAK,QAAzB,EAAmC,KAAK,QAAxC,EAAkD,KAAlD,CAAwD,UAAA,CAAC;AAAA,yBAAI,GAAG,GAAG,CAAV;AAAA,iBAAzD,CA3BtB;;AAAA;AA2BU,gBAAA,GA3BV;;AAAA,sBA4BO,GAAG,IAAI,GAAG,CAAC,MAAJ,KAAe,GA5B7B;AAAA;AAAA;AAAA;;AA6BM,qBAAK,aAAL,GAAqB,gCAArB;AA7BN;;AAAA;AAgCI,qBAAK,QAAL,CAAc,WAAd,GAA4B,GAA5B;AACA,qBAAK,QAAL,CAAc,IAAd,CAAmB,aAAnB;AACA,qBAAK,IAAL,GAAY,KAAZ;AACA,qBAAK,KAAL,CAAW,SAAX,EAAsB,IAAtB;;AAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAqCQ;AACJ,aAAO,KAAK,IAAZ;AACD;AAvCH;AAAA;AAAA,6BAwCQ;AACJ,WAAK,IAAL,GAAY,KAAZ;AACA,WAAK,QAAL,CAAc,IAAd,CAAmB,aAAnB;AACA,WAAK,KAAL,CAAW,YAAX,EAAyB,IAAzB;AACD;AA5CH;;AAAA;AAAA,EAAmC,GAAnC,CAAA;;AAIE,UAAA,CAAA,CADC,MAAM,CAAC,aAAD,CACP,CAAA,E,eAAA,E,UAAA,E,KAAuB,CAAvB,CAAA;;AAJmB,KAAK,GAAA,UAAA,CAAA,CADzB,SACyB,CAAA,EAAL,KAAK,CAAL;eAAA,K","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Inject} from 'vue-property-decorator';\nimport \"./Login.scss\";\n\nimport {UserService} from \"@/services/UserService\";\nconst HandcashAppID = process.env.VUE_APP_HC_APP_ID\n\n@Component\nexport default class Login extends Vue {\n  username: string;\n  password: string;\n  @Inject('userService')\n  user_ser!: UserService;\n  error_message: string;\n  open: boolean;\n  constructor() {\n    super();\n    this.username = \"\";\n    this.password = \"\";\n    this.open = false;\n    this.error_message = \"\";\n  }\n  showModal(){\n    this.open = true;\n    this.$bvModal.show(\"login-modal\");\n  }\n  async loginHandcash() {\n    const expireIn = new Date(new Date().getTime() + 5 * 60 * 1000);\n    this.$cookies.set('loginUser', true, expireIn)\n    this.$cookies.set('loginPath', this.$route.path, expireIn)\n    window.location.href = 'https://app.handcash.io/#/authorizeApp?appId=' + HandcashAppID\n  }\n  async login(){\n    this.error_message = \"\";\n    let err = null;\n    const res = await this.user_ser.login(this.username, this.password).catch(e => err = e);\n    if(err || res.status === 400){\n      this.error_message = \"Please check your credentials.\";\n      return;\n    }\n    this.user_ser.currentUser = res;\n    this.$bvModal.hide(\"login-modal\");\n    this.open = false;\n    this.$emit('onLogin', true);\n  }\n  isOpen() {\n    return this.open\n  }\n  signup(){\n    this.open = false;\n    this.$bvModal.hide(\"login-modal\");\n    this.$emit('openSignup', true);\n  }\n}\n"],"sourceRoot":""}]}