export declare abstract class AbstractControl {
    private validators?;
    private asyncValidators?;
    constructor(value: any, validators?: any[], asyncValidators?: any[]);
    errors: any;
    root: any;
    value: any;
    readonly pristine: boolean;
    parent: any;
    readonly valid: boolean;
    readonly invalid: boolean;
    readonly enabled: boolean;
    readonly disabled: boolean;
    readonly dirty: boolean;
    readonly touched: boolean;
    readonly untouched: boolean;
    status: string;
    markAsDirty(): void;
    markAsTouched(): void;
    markAsUnTouched(): void;
    disable(): void;
    enable(): void;
    updateValueAndValidity(): void;
    private runValidators;
    setErrors(errors: any): void;
    setValue(value: any): void;
    onChange(): void;
    subscribe(func: Function): void;
    destroy(): void;
    private _status;
    private _parent;
    private _pristine;
    private _errors;
    private _value;
    private _root;
    private _touched;
    private subscribers;
}
