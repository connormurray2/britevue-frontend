import { FormGroupDirective } from "../directives/form-group.directive";
export const formGroupContainer = new (class {
    constructor() {
        this.formGroups = {};
        this.groupKeyElements = {};
        this.formGroupDirectives = {};
    }
    get(groupKey) {
        return this.formGroups[groupKey];
    }
    saveFormGroup(formGroup) {
        let groupKey = formGroup.path;
        this.formGroups[formGroup.path] = formGroup;
        this.bindIt(groupKey);
    }
    mapElement(groupKey, element) {
        this.groupKeyElements[groupKey] = element;
        this.bindIt(groupKey);
    }
    bindIt(groupKey) {
        if (this.groupKeyElements[groupKey] && this.formGroups[groupKey]) {
            setTimeout(() => {
                this.formGroupDirectives[groupKey] = new FormGroupDirective(this.groupKeyElements[groupKey], this.formGroups[groupKey]);
            }, 100);
        }
    }
    destroy(groupKey) {
        if (this.formGroupDirectives[groupKey]) {
            this.formGroupDirectives[groupKey].destroy();
            delete this.formGroupDirectives[groupKey];
        }
    }
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ncm91cC5zdGF0ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1mb3Jtcy8iLCJzb3VyY2VzIjpbImNvcmUvZm9ybS1ncm91cC5zdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUV4RSxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FNdkIsSUFBSSxDQUFDO0lBQUE7UUFDRyxlQUFVLEdBQW1DLEVBQUUsQ0FBQztRQUVoRCxxQkFBZ0IsR0FBbUMsRUFBRSxDQUFDO1FBRXRELHdCQUFtQixHQUF5QyxFQUFFLENBQUM7SUFrQzNFLENBQUM7SUFoQ0csR0FBRyxDQUFDLFFBQWdCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsYUFBYSxDQUFDLFNBQXNCO1FBRWhDLElBQUksUUFBUSxHQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsU0FBUyxDQUFDO1FBQzVDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVELFVBQVUsQ0FBQyxRQUFnQixFQUFFLE9BQW9CO1FBQzdDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxPQUFPLENBQUM7UUFDMUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUN6QixDQUFDO0lBRUQsTUFBTSxDQUFDLFFBQWdCO1FBQ25CLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDOUQsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDWixJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQzVILENBQUMsRUFBQyxHQUFHLENBQUMsQ0FBQTtTQUVUO0lBRUwsQ0FBQztJQUVELE9BQU8sQ0FBQyxRQUFnQjtRQUNwQixJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNwQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDN0MsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDN0M7SUFDTCxDQUFDO0NBQ0osQ0FBQyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSeEZvcm1Hcm91cCB9IGZyb20gXCIuLi9zZXJ2aWNlcy9yeC1mb3JtLWdyb3VwXCI7XHJcbmltcG9ydCB7IEZvcm1Hcm91cERpcmVjdGl2ZSB9IGZyb20gXCIuLi9kaXJlY3RpdmVzL2Zvcm0tZ3JvdXAuZGlyZWN0aXZlXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZm9ybUdyb3VwQ29udGFpbmVyOlxyXG4gICAge1xyXG4gICAgICAgIGdldChncm91cEtleTogc3RyaW5nKTogUnhGb3JtR3JvdXAsXHJcbiAgICAgICAgc2F2ZUZvcm1Hcm91cChmb3JtR3JvdXA6IFJ4Rm9ybUdyb3VwKSxcclxuICAgICAgICBtYXBFbGVtZW50KGdyb3VwS2V5OiBzdHJpbmcsIGVsZW1lbnQ6IEhUTUxFbGVtZW50KSxcclxuICAgICAgICBkZXN0cm95KGdyb3VwS2V5OiBzdHJpbmcpXHJcbiAgICB9ID0gbmV3IChjbGFzcyB7XHJcbiAgICAgICAgcHJpdmF0ZSBmb3JtR3JvdXBzOiB7IFtrZXk6IHN0cmluZ106IFJ4Rm9ybUdyb3VwIH0gPSB7fTtcclxuXHJcbiAgICAgICAgcHJpdmF0ZSBncm91cEtleUVsZW1lbnRzOiB7IFtrZXk6IHN0cmluZ106IEhUTUxFbGVtZW50IH0gPSB7fTtcclxuXHJcbiAgICAgICAgcHJpdmF0ZSBmb3JtR3JvdXBEaXJlY3RpdmVzOiB7IFtrZXk6IHN0cmluZ106IEZvcm1Hcm91cERpcmVjdGl2ZX0gPSB7fTtcclxuXHJcbiAgICAgICAgZ2V0KGdyb3VwS2V5OiBzdHJpbmcpOiBSeEZvcm1Hcm91cCB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvcm1Hcm91cHNbZ3JvdXBLZXldO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2F2ZUZvcm1Hcm91cChmb3JtR3JvdXA6IFJ4Rm9ybUdyb3VwKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBsZXQgZ3JvdXBLZXk6YW55ID0gZm9ybUdyb3VwLnBhdGg7XHJcbiAgICAgICAgICAgIHRoaXMuZm9ybUdyb3Vwc1tmb3JtR3JvdXAucGF0aF0gPSBmb3JtR3JvdXA7XHJcbiAgICAgICAgICAgIHRoaXMuYmluZEl0KGdyb3VwS2V5KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG1hcEVsZW1lbnQoZ3JvdXBLZXk6IHN0cmluZywgZWxlbWVudDogSFRNTEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5ncm91cEtleUVsZW1lbnRzW2dyb3VwS2V5XSA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIHRoaXMuYmluZEl0KGdyb3VwS2V5KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYmluZEl0KGdyb3VwS2V5OiBzdHJpbmcpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZ3JvdXBLZXlFbGVtZW50c1tncm91cEtleV0gJiYgdGhpcy5mb3JtR3JvdXBzW2dyb3VwS2V5XSkge1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtR3JvdXBEaXJlY3RpdmVzW2dyb3VwS2V5XSA9IG5ldyBGb3JtR3JvdXBEaXJlY3RpdmUodGhpcy5ncm91cEtleUVsZW1lbnRzW2dyb3VwS2V5XSwgdGhpcy5mb3JtR3JvdXBzW2dyb3VwS2V5XSk7XHJcbiAgICAgICAgICAgICAgICB9LDEwMClcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZGVzdHJveShncm91cEtleTogc3RyaW5nKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmZvcm1Hcm91cERpcmVjdGl2ZXNbZ3JvdXBLZXldKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1Hcm91cERpcmVjdGl2ZXNbZ3JvdXBLZXldLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmZvcm1Hcm91cERpcmVjdGl2ZXNbZ3JvdXBLZXldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSkoKTsiXX0=