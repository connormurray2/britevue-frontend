import { ResetFormType } from "../enums/reset-type";
import { AbstractControl } from "../abstract/abstract-control";
import { AbstractFormArray } from "../abstract/abstract-form-array";
import { RxFormGroup } from "../services/rx-form-group";
export function isResetControl(controlName, control, options) {
    let isReset = true;
    if (options) {
        isReset = false;
        if (options.resetType)
            switch (options.resetType) {
                case ResetFormType.ControlsOnly:
                    isReset = control instanceof AbstractControl;
                    break;
                case ResetFormType.ControlsAndFormGroupsOnly:
                    isReset = control instanceof AbstractControl;
                    break;
                case ResetFormType.FormGroupsOnly:
                    isReset = control instanceof RxFormGroup;
                    break;
                case ResetFormType.FormArraysOnly:
                    isReset = control instanceof AbstractFormArray;
                    break;
                case ResetFormType.DefinedPropsOnly:
                    isReset = options.value ? Object.keys(options.value).indexOf(controlName) != -1 : false;
                    break;
                default:
                    isReset = true;
                    break;
            }
        if (!isReset && options.with)
            isReset = options.with.filter(x => x.split('.')[0] == controlName.split('.')[0])[0] !== undefined;
        if (!isReset && options.value && (options.resetType === undefined || options.resetType !== ResetFormType.DefinedPropsOnly))
            isReset = true;
    }
    return isReset;
}
export function getNestedOptions(controlName, options) {
    if (options) {
        let jObjectOptions = {};
        if (options.resetType)
            jObjectOptions.resetType = (options.resetType == ResetFormType.FormGroupsOnly || options.resetType == ResetFormType.FormArraysOnly) ? ResetFormType.ControlsOnly : options.resetType;
        if (options.with) {
            let nestedControls = options.with.filter(t => t.split('.')[0] == controlName);
            let controlNames = nestedControls.map(x => {
                let splitControls = x.split('.');
                splitControls.splice(0, 1);
                return splitControls.join('.');
            });
            jObjectOptions.with = controlNames;
        }
        if (options.value && options.value[controlName])
            jObjectOptions.value = options.value[controlName];
        jObjectOptions = Object.keys(jObjectOptions).length > 0 ? jObjectOptions : undefined;
        return jObjectOptions;
    }
    return undefined;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzZXQtZm9ybS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1mb3Jtcy8iLCJzb3VyY2VzIjpbInV0aWwvcmVzZXQtZm9ybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RCxNQUFNLFVBQVUsY0FBYyxDQUFDLFdBQWtCLEVBQUMsT0FBWSxFQUFFLE9BSS9EO0lBQ0csSUFBSSxPQUFPLEdBQVksSUFBSSxDQUFDO0lBQzVCLElBQUksT0FBTyxFQUFFO1FBQ1QsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNoQixJQUFJLE9BQU8sQ0FBQyxTQUFTO1lBQ3JCLFFBQVEsT0FBTyxDQUFDLFNBQVMsRUFBRTtnQkFDdkIsS0FBSyxhQUFhLENBQUMsWUFBWTtvQkFDM0IsT0FBTyxHQUFHLE9BQU8sWUFBWSxlQUFlLENBQUM7b0JBQzdDLE1BQU07Z0JBQ1YsS0FBSyxhQUFhLENBQUMseUJBQXlCO29CQUN4QyxPQUFPLEdBQUcsT0FBTyxZQUFZLGVBQWUsQ0FBQztvQkFDN0MsTUFBTTtnQkFDVixLQUFLLGFBQWEsQ0FBQyxjQUFjO29CQUM3QixPQUFPLEdBQUcsT0FBTyxZQUFZLFdBQVcsQ0FBQztvQkFDekMsTUFBTTtnQkFDVixLQUFLLGFBQWEsQ0FBQyxjQUFjO29CQUM3QixPQUFPLEdBQUcsT0FBTyxZQUFZLGlCQUFpQixDQUFDO29CQUMvQyxNQUFNO2dCQUNWLEtBQUssYUFBYSxDQUFDLGdCQUFnQjtvQkFDL0IsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO29CQUN4RixNQUFNO2dCQUNWO29CQUNJLE9BQU8sR0FBRyxJQUFJLENBQUM7b0JBQ2YsTUFBTTthQUNUO1FBQ0wsSUFBSSxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsSUFBSTtZQUN4QixPQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxTQUFTLENBQUM7UUFDdEcsSUFBSSxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsS0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsS0FBSyxTQUFTLElBQUksT0FBTyxDQUFDLFNBQVMsS0FBSyxhQUFhLENBQUMsZ0JBQWdCLENBQUM7WUFDdEgsT0FBTyxHQUFHLElBQUksQ0FBQztLQUN0QjtJQUNELE9BQU8sT0FBTyxDQUFDO0FBQ25CLENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsV0FBbUIsRUFBRSxPQUlyRDtJQUNHLElBQUksT0FBTyxFQUFFO1FBQ1QsSUFBSSxjQUFjLEdBSUYsRUFBRSxDQUFDO1FBQ25CLElBQUksT0FBTyxDQUFDLFNBQVM7WUFDakIsY0FBYyxDQUFDLFNBQVMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksYUFBYSxDQUFDLGNBQWMsSUFBSSxPQUFPLENBQUMsU0FBUyxJQUFJLGFBQWEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUN6TCxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7WUFDZCxJQUFJLGNBQWMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFDLENBQUM7WUFDOUUsSUFBSSxZQUFZLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDdEMsSUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDakMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNuQyxDQUFDLENBQUMsQ0FBQztZQUNILGNBQWMsQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDO1NBQ3RDO1FBQ0QsSUFBSSxPQUFPLENBQUMsS0FBSyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDO1lBQzNDLGNBQWMsQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN0RCxjQUFjLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNyRixPQUFPLGNBQWMsQ0FBQztLQUN6QjtJQUNELE9BQU8sU0FBUyxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNldEZvcm1UeXBlIH0gZnJvbSBcIi4uL2VudW1zL3Jlc2V0LXR5cGVcIjtcclxuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sIH0gZnJvbSBcIi4uL2Fic3RyYWN0L2Fic3RyYWN0LWNvbnRyb2xcIjtcclxuaW1wb3J0IHsgQWJzdHJhY3RGb3JtQXJyYXkgfSBmcm9tIFwiLi4vYWJzdHJhY3QvYWJzdHJhY3QtZm9ybS1hcnJheVwiO1xyXG5pbXBvcnQgeyBSeEZvcm1Hcm91cCB9IGZyb20gXCIuLi9zZXJ2aWNlcy9yeC1mb3JtLWdyb3VwXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNSZXNldENvbnRyb2woY29udHJvbE5hbWU6c3RyaW5nLGNvbnRyb2w6IGFueSwgb3B0aW9ucz86IHtcclxuICAgIHJlc2V0VHlwZT86IFJlc2V0Rm9ybVR5cGUsXHJcbiAgICB3aXRoPzogc3RyaW5nW10sXHJcbiAgICB2YWx1ZT86IHsgW2tleTogc3RyaW5nXTogYW55IH1cclxufSkge1xyXG4gICAgbGV0IGlzUmVzZXQ6IGJvb2xlYW4gPSB0cnVlO1xyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgICBpc1Jlc2V0ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMucmVzZXRUeXBlKVxyXG4gICAgICAgIHN3aXRjaCAob3B0aW9ucy5yZXNldFR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBSZXNldEZvcm1UeXBlLkNvbnRyb2xzT25seTpcclxuICAgICAgICAgICAgICAgIGlzUmVzZXQgPSBjb250cm9sIGluc3RhbmNlb2YgQWJzdHJhY3RDb250cm9sO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgUmVzZXRGb3JtVHlwZS5Db250cm9sc0FuZEZvcm1Hcm91cHNPbmx5OlxyXG4gICAgICAgICAgICAgICAgaXNSZXNldCA9IGNvbnRyb2wgaW5zdGFuY2VvZiBBYnN0cmFjdENvbnRyb2w7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBSZXNldEZvcm1UeXBlLkZvcm1Hcm91cHNPbmx5OlxyXG4gICAgICAgICAgICAgICAgaXNSZXNldCA9IGNvbnRyb2wgaW5zdGFuY2VvZiBSeEZvcm1Hcm91cDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFJlc2V0Rm9ybVR5cGUuRm9ybUFycmF5c09ubHk6XHJcbiAgICAgICAgICAgICAgICBpc1Jlc2V0ID0gY29udHJvbCBpbnN0YW5jZW9mIEFic3RyYWN0Rm9ybUFycmF5O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgUmVzZXRGb3JtVHlwZS5EZWZpbmVkUHJvcHNPbmx5OlxyXG4gICAgICAgICAgICAgICAgaXNSZXNldCA9IG9wdGlvbnMudmFsdWUgPyBPYmplY3Qua2V5cyhvcHRpb25zLnZhbHVlKS5pbmRleE9mKGNvbnRyb2xOYW1lKSAhPSAtMSA6IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBpc1Jlc2V0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFpc1Jlc2V0ICYmIG9wdGlvbnMud2l0aCkgXHJcbiAgICAgICAgICAgIGlzUmVzZXQgPSBvcHRpb25zLndpdGguZmlsdGVyKHggPT4geC5zcGxpdCgnLicpWzBdID09IGNvbnRyb2xOYW1lLnNwbGl0KCcuJylbMF0pWzBdICE9PSB1bmRlZmluZWQ7XHJcbiAgICAgICAgaWYgKCFpc1Jlc2V0ICYmIG9wdGlvbnMudmFsdWUgJiYgKG9wdGlvbnMucmVzZXRUeXBlID09PSB1bmRlZmluZWQgfHwgb3B0aW9ucy5yZXNldFR5cGUgIT09IFJlc2V0Rm9ybVR5cGUuRGVmaW5lZFByb3BzT25seSkpXHJcbiAgICAgICAgICAgIGlzUmVzZXQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGlzUmVzZXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXROZXN0ZWRPcHRpb25zKGNvbnRyb2xOYW1lOiBzdHJpbmcsIG9wdGlvbnM/OiB7XHJcbiAgICByZXNldFR5cGU/OiBSZXNldEZvcm1UeXBlLFxyXG4gICAgd2l0aD86IHN0cmluZ1tdLFxyXG4gICAgdmFsdWU/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9XHJcbn0pIHtcclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IGpPYmplY3RPcHRpb25zOiB7XHJcbiAgICAgICAgICAgIHJlc2V0VHlwZT86IFJlc2V0Rm9ybVR5cGUsXHJcbiAgICAgICAgICAgIHdpdGg/OiBzdHJpbmdbXSxcclxuICAgICAgICAgICAgdmFsdWU/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9XHJcbiAgICAgICAgfSB8IHVuZGVmaW5lZCA9IHt9O1xyXG4gICAgICAgIGlmIChvcHRpb25zLnJlc2V0VHlwZSlcclxuICAgICAgICAgICAgak9iamVjdE9wdGlvbnMucmVzZXRUeXBlID0gKG9wdGlvbnMucmVzZXRUeXBlID09IFJlc2V0Rm9ybVR5cGUuRm9ybUdyb3Vwc09ubHkgfHwgb3B0aW9ucy5yZXNldFR5cGUgPT0gUmVzZXRGb3JtVHlwZS5Gb3JtQXJyYXlzT25seSkgPyBSZXNldEZvcm1UeXBlLkNvbnRyb2xzT25seSA6IG9wdGlvbnMucmVzZXRUeXBlO1xyXG4gICAgICAgIGlmIChvcHRpb25zLndpdGgpIHtcclxuICAgICAgICAgICAgbGV0IG5lc3RlZENvbnRyb2xzID0gb3B0aW9ucy53aXRoLmZpbHRlcih0ID0+IHQuc3BsaXQoJy4nKVswXSA9PSBjb250cm9sTmFtZSk7XHJcbiAgICAgICAgICAgIGxldCBjb250cm9sTmFtZXMgPSBuZXN0ZWRDb250cm9scy5tYXAoeCA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgc3BsaXRDb250cm9scyA9IHguc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgICAgIHNwbGl0Q29udHJvbHMuc3BsaWNlKDAsIDEpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNwbGl0Q29udHJvbHMuam9pbignLicpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgak9iamVjdE9wdGlvbnMud2l0aCA9IGNvbnRyb2xOYW1lcztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG9wdGlvbnMudmFsdWUgJiYgb3B0aW9ucy52YWx1ZVtjb250cm9sTmFtZV0pXHJcbiAgICAgICAgICAgIGpPYmplY3RPcHRpb25zLnZhbHVlID0gb3B0aW9ucy52YWx1ZVtjb250cm9sTmFtZV07XHJcbiAgICAgICAgak9iamVjdE9wdGlvbnMgPSBPYmplY3Qua2V5cyhqT2JqZWN0T3B0aW9ucykubGVuZ3RoID4gMCA/IGpPYmplY3RPcHRpb25zIDogdW5kZWZpbmVkO1xyXG4gICAgICAgIHJldHVybiBqT2JqZWN0T3B0aW9ucztcclxuICAgIH1cclxuICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbn0iXX0=