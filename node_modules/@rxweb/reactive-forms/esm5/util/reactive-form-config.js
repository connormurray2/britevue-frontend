import * as tslib_1 from "tslib";
export var ClientLibrary;
(function (ClientLibrary) {
    ClientLibrary[ClientLibrary["React"] = 0] = "React";
    ClientLibrary[ClientLibrary["Vue"] = 1] = "Vue";
    ClientLibrary[ClientLibrary["Angular"] = 2] = "Angular";
    ClientLibrary[ClientLibrary["Vanilla"] = 3] = "Vanilla";
    ClientLibrary[ClientLibrary["None"] = 4] = "None";
})(ClientLibrary || (ClientLibrary = {}));
var ReactiveFormConfig = /** @class */ (function () {
    function ReactiveFormConfig() {
    }
    ReactiveFormConfig.set = function (jObject) {
        if (jObject)
            ReactiveFormConfig.json = jObject;
    };
    ReactiveFormConfig.get = function (path) {
        var e_1, _a;
        var jObject = undefined;
        if (ReactiveFormConfig.json) {
            var splitPath = path.split('.');
            try {
                for (var splitPath_1 = tslib_1.__values(splitPath), splitPath_1_1 = splitPath_1.next(); !splitPath_1_1.done; splitPath_1_1 = splitPath_1.next()) {
                    var columnName = splitPath_1_1.value;
                    jObject = (!jObject) ? ReactiveFormConfig.json[columnName] : jObject[columnName];
                    if (!jObject)
                        break;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (splitPath_1_1 && !splitPath_1_1.done && (_a = splitPath_1.return)) _a.call(splitPath_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return jObject;
    };
    ReactiveFormConfig.number = {};
    ReactiveFormConfig.json = {};
    ReactiveFormConfig.clientLib = ClientLibrary.None;
    return ReactiveFormConfig;
}());
export { ReactiveFormConfig };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3RpdmUtZm9ybS1jb25maWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Acnh3ZWIvcmVhY3RpdmUtZm9ybXMvIiwic291cmNlcyI6WyJ1dGlsL3JlYWN0aXZlLWZvcm0tY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLENBQU4sSUFBWSxhQU1YO0FBTkQsV0FBWSxhQUFhO0lBQ3JCLG1EQUFLLENBQUE7SUFDTCwrQ0FBRyxDQUFBO0lBQ0gsdURBQU8sQ0FBQTtJQUNQLHVEQUFPLENBQUE7SUFDUCxpREFBSSxDQUFBO0FBQ1IsQ0FBQyxFQU5XLGFBQWEsS0FBYixhQUFhLFFBTXhCO0FBQ0Q7SUFBQTtJQXNCQSxDQUFDO0lBakJVLHNCQUFHLEdBQVYsVUFBVyxPQUErQjtRQUN0QyxJQUFJLE9BQU87WUFDUCxrQkFBa0IsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO0lBQzFDLENBQUM7SUFFTSxzQkFBRyxHQUFWLFVBQVcsSUFBWTs7UUFDbkIsSUFBSSxPQUFPLEdBQVEsU0FBUyxDQUFDO1FBQzdCLElBQUksa0JBQWtCLENBQUMsSUFBSSxFQUFFO1lBQ3pCLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7O2dCQUNoQyxLQUF1QixJQUFBLGNBQUEsaUJBQUEsU0FBUyxDQUFBLG9DQUFBLDJEQUFFO29CQUE3QixJQUFJLFVBQVUsc0JBQUE7b0JBQ2YsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQ2pGLElBQUksQ0FBQyxPQUFPO3dCQUNSLE1BQU07aUJBQ2I7Ozs7Ozs7OztTQUNKO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQXBCTSx5QkFBTSxHQUFzQixFQUFFLENBQUE7SUFDOUIsdUJBQUksR0FBMkIsRUFBRSxDQUFDO0lBQ2xDLDRCQUFTLEdBQWtCLGFBQWEsQ0FBQyxJQUFJLENBQUM7SUFtQnpELHlCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0F0Qlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gQ2xpZW50TGlicmFyeSB7XHJcbiAgICBSZWFjdCxcclxuICAgIFZ1ZSxcclxuICAgIEFuZ3VsYXIsXHJcbiAgICBWYW5pbGxhLFxyXG4gICAgTm9uZVxyXG59XHJcbmV4cG9ydCBjbGFzcyBSZWFjdGl2ZUZvcm1Db25maWcge1xyXG4gICAgc3RhdGljIG51bWJlcjp7W2tleTpzdHJpbmddOmFueX0gPSB7fVxyXG4gICAgc3RhdGljIGpzb246IHsgW2tleTogc3RyaW5nXTogYW55IH0gPSB7fTtcclxuICAgIHN0YXRpYyBjbGllbnRMaWI6IENsaWVudExpYnJhcnkgPSBDbGllbnRMaWJyYXJ5Lk5vbmU7XHJcblxyXG4gICAgc3RhdGljIHNldChqT2JqZWN0OiB7IFtrZXk6IHN0cmluZ106IGFueSB9KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGpPYmplY3QpXHJcbiAgICAgICAgICAgIFJlYWN0aXZlRm9ybUNvbmZpZy5qc29uID0gak9iamVjdDtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0KHBhdGg6IHN0cmluZyk6IGFueSB7XHJcbiAgICAgICAgbGV0IGpPYmplY3Q6IGFueSA9IHVuZGVmaW5lZDsgICAgICAgIFxyXG4gICAgICAgIGlmIChSZWFjdGl2ZUZvcm1Db25maWcuanNvbikge1xyXG4gICAgICAgICAgICBsZXQgc3BsaXRQYXRoID0gcGF0aC5zcGxpdCgnLicpO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBjb2x1bW5OYW1lIG9mIHNwbGl0UGF0aCkge1xyXG4gICAgICAgICAgICAgICAgak9iamVjdCA9ICghak9iamVjdCkgPyBSZWFjdGl2ZUZvcm1Db25maWcuanNvbltjb2x1bW5OYW1lXSA6IGpPYmplY3RbY29sdW1uTmFtZV07XHJcbiAgICAgICAgICAgICAgICBpZiAoIWpPYmplY3QpXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGpPYmplY3Q7XHJcbiAgICB9XHJcbn1cclxuIl19