import { ObjectMaker } from "../util/object-maker";
import { AnnotationTypes } from "../core/validator.static";
import { ValidatorValueChecker } from "../util/validator-value-checker";
import { getConfigObject } from "../util/config-provider";
import { RANGE_CONFIG } from "../const/config-names.const";
export function rangeValidator(configModel) {
    return function (control) {
        var config = getConfigObject(configModel, control, RANGE_CONFIG);
        if (ValidatorValueChecker.pass(control, config)) {
            if (!(String(control.value).indexOf(".") == -1 && parseInt(control.value) >= config.minimumNumber && parseInt(control.value) <= config.maximumNumber))
                return ObjectMaker.toJson(AnnotationTypes.range, config, [control.value, config.minimumNumber, config.maximumNumber]);
        }
        return ObjectMaker.null();
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UudmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHJ4d2ViL3JlYWN0aXZlLWZvcm1zLyIsInNvdXJjZXMiOlsicmVhY3RpdmUtZm9ybS12YWxpZGF0b3JzL3JhbmdlLnZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDM0QsTUFBTSxVQUFVLGNBQWMsQ0FBQyxXQUF3QjtJQUNuRCxPQUFPLFVBQUMsT0FBd0I7UUFDaEMsSUFBSSxNQUFNLEdBQUcsZUFBZSxDQUFDLFdBQVcsRUFBQyxPQUFPLEVBQUMsWUFBWSxDQUFDLENBQUM7UUFDL0QsSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQy9DLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksTUFBTSxDQUFDLGFBQWEsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxhQUFhLENBQUM7Z0JBQ25KLE9BQU8sV0FBVyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQTtTQUN4SDtRQUNELE9BQU8sV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzVCLENBQUMsQ0FBQTtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wgfSBmcm9tIFwiLi4vYWJzdHJhY3QvYWJzdHJhY3QtY29udHJvbFwiXHJcbmltcG9ydCB7IFZhbGlkYXRvckZuIH0gZnJvbSAnLi4vbW9kZWxzL2ludGVyZmFjZS92YWxpZGF0b3ItZm4nXHJcbmltcG9ydCB7IFJhbmdlQ29uZmlnIH0gZnJvbSBcIi4uL21vZGVscy9jb25maWcvcmFuZ2UtY29uZmlnXCI7XHJcbmltcG9ydCB7IE9iamVjdE1ha2VyIH0gZnJvbSBcIi4uL3V0aWwvb2JqZWN0LW1ha2VyXCI7XHJcbmltcG9ydCB7IEFubm90YXRpb25UeXBlcyB9IGZyb20gXCIuLi9jb3JlL3ZhbGlkYXRvci5zdGF0aWNcIjtcclxuaW1wb3J0IHsgVmFsaWRhdG9yVmFsdWVDaGVja2VyIH0gZnJvbSBcIi4uL3V0aWwvdmFsaWRhdG9yLXZhbHVlLWNoZWNrZXJcIjtcclxuaW1wb3J0IHtnZXRDb25maWdPYmplY3R9IGZyb20gXCIuLi91dGlsL2NvbmZpZy1wcm92aWRlclwiO1xyXG5pbXBvcnQgeyBSQU5HRV9DT05GSUcgfSBmcm9tIFwiLi4vY29uc3QvY29uZmlnLW5hbWVzLmNvbnN0XCI7XHJcbmV4cG9ydCBmdW5jdGlvbiByYW5nZVZhbGlkYXRvcihjb25maWdNb2RlbDogUmFuZ2VDb25maWcpOiBWYWxpZGF0b3JGbiB7XHJcbiAgICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYW55IH0gfCBudWxsID0+IHtcclxuICAgIGxldCBjb25maWcgPSBnZXRDb25maWdPYmplY3QoY29uZmlnTW9kZWwsY29udHJvbCxSQU5HRV9DT05GSUcpO1xyXG4gICAgaWYgKFZhbGlkYXRvclZhbHVlQ2hlY2tlci5wYXNzKGNvbnRyb2wsIGNvbmZpZykpIHtcclxuICAgICAgaWYgKCEoU3RyaW5nKGNvbnRyb2wudmFsdWUpLmluZGV4T2YoXCIuXCIpID09IC0xICYmIHBhcnNlSW50KGNvbnRyb2wudmFsdWUpID49IGNvbmZpZy5taW5pbXVtTnVtYmVyICYmIHBhcnNlSW50KGNvbnRyb2wudmFsdWUpIDw9IGNvbmZpZy5tYXhpbXVtTnVtYmVyKSlcclxuICAgICAgICByZXR1cm4gT2JqZWN0TWFrZXIudG9Kc29uKEFubm90YXRpb25UeXBlcy5yYW5nZSwgY29uZmlnLCBbY29udHJvbC52YWx1ZSwgY29uZmlnLm1pbmltdW1OdW1iZXIsIGNvbmZpZy5tYXhpbXVtTnVtYmVyXSlcclxuICAgIH1cclxuICAgIHJldHVybiBPYmplY3RNYWtlci5udWxsKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==